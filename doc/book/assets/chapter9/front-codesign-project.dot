digraph Project {
  // Introduction
  graph [rankdir = LR, splines=ortho];
  node[shape=record];

  // Blocks
  subgraph "cluster Workflow" { label = "Front-End Workflow";
    subgraph "cluster Hardware" { label = "Hardware";
      Requirements_HW[label="Requirements \n(Matlab/Python/PSL/UML) [Vi]"];
      Model_HW[label="Hardware Model \n(VHDL/SystemVerilog) [Vi]"];
      Validation_HW[label="Hardware Validation \n(VHDL/SystemVerilog) [GHDL / Icarus Verilog]"];
      Design_HW[label="Hardware Design \n(VHDL/Verilog) [Vi]"];
      Verification_HW[label="Hardware Verification \n(VHDL/SystemVerilog) [GHDL / Icarus Verilog]"];
      Configuration_HW[label="Configuration \n(C/C++/Go/Rust) [Vi]"];
      Implementation_HW[label="Implementation \n(VHDL/Verilog) [Yosys]"];
    }
    subgraph "cluster Software" { label = "Software";
      Requirements_SW[label="Requirements \n(Matlab/Python/PSL/UML) [Vi]"];
      Model_SW[label="Software Model \n(C/C++/Go/Rust) [Vi]"];
      Validation_SW[label="Software Validation \n(C/C++/Go/Rust) [GCC]"];
      Design_SW[label="Software Design \n(C/C++/Go/Rust) [Vi]"];
      Verification_SW[label="Software Verification \n(C/C++/Go/Rust) [GCC]"];
      Configuration_SW[label="Configuration \n(C/C++/Go/Rust) [Vi]"];
      Implementation_SW[label="Implementation \n(C/C++/Go/Rust) [GCC]"];
    }
  }

  // Hardware Sequence
  Requirements_HW -> Model_HW;
  Model_HW -> Validation_HW;
  Validation_HW -> Design_HW;
  Design_HW -> Verification_HW;
  Verification_HW -> Configuration_HW;
  Configuration_HW -> Implementation_HW;

  // Hardware Feedback
  Validation_HW -> Model_HW;
  Verification_HW -> Design_HW;

  // Software Sequence
  Requirements_SW -> Model_SW;
  Model_SW -> Validation_SW;
  Validation_SW -> Design_SW;
  Design_SW -> Verification_SW;
  Verification_SW -> Configuration_SW;
  Configuration_SW -> Implementation_SW;

  // Software Feedback
  Validation_SW -> Model_SW;
  Verification_SW -> Design_SW;
}
