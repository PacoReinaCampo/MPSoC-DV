digraph Project {
  // Introduction
  graph [rankdir = LR, splines=ortho];
  node[shape=record];

  // Blocks
  Requirements[label="Requirements \n(PSL/UML) [Emacs]"];
  Source[label="Source \n(Matlab/Rust/ADA/C) [Emacs]"];
  Model[label="Hardware Model \n(VHDL/Verilog) [Emacs]"];
  Validation[label="Hardware Validation \n(VHDL/Verilog) [GHDL / Icarus Verilog]"];
  Design[label="Hardware Design \n(VHDL/Verilog) [Emacs]"];
  Verification[label="Hardware Verification \n(VHDL/Verilog) [GHDL / Icarus Verilog]"];
  Quality[label="Quality Assurance \n(TeX) [Emacs]"];
  Certification[label="Certification \n(TeX) [Emacs]"];
  Lifecycle[label="Design Lifecycle Data \n(TeX) [Emacs]"];

  // Sequence
  Requirements -> Source;
  Source -> Model;
  Model -> Validation;
  Validation -> Design;
  Design -> Verification;
  Verification -> Quality;
  Quality -> Certification;
  Certification -> Lifecycle;
  Lifecycle -> Requirements;

  // Feedback
  Validation -> Requirements;
  Verification -> Requirements;
  Quality -> Requirements;
}
