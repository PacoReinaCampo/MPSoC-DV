digraph Project {
  // Introduction
  graph [rankdir = LR, splines=ortho];
  node[shape=record];

  // Blocks
  Requirements[label="Requirements \n(UML) [Dot]"];
  Source[label="Source \n(Matlab/Rust/ADA/C) [Emacs]"];
  Model[label="Model \n(C/C++/Go) [Emacs]"];
  Validation[label="Validation \n(C/C++/Go) [GCC]"];
  Design[label="Design \n(C/C++/Go) [Emacs]"];
  Verification[label="Verification \n(C/C++/Go) [GCC]"];
  Quality[label="Quality \n(TeX) [Emacs]"];
  Certification[label="Certification \n(TeX) [Emacs]"];
  Documentation[label="Documentation \n(TeX) [Emacs]"];

  // Sequence
  Requirements -> Source;
  Source -> Model;
  Model -> Validation;
  Validation -> Design;
  Design -> Verification;
  Verification -> Quality;
  Quality -> Certification;
  Certification -> Documentation;

  // Feedback
  Validation -> Requirements;
  Verification -> Requirements;
  Quality -> Requirements;
}
